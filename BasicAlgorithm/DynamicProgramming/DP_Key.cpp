//
// Created by linjliang on 2020/8/6.
//

/*
 * 动态规划：
 * 把大问题变成小问题，并解决了小问题的重复计算
 *
 * 动态规划 和 递归法：
 * - 二叉树的子问题没有交集，所以大部分二叉树相关问题都用递归或者分治法来解决
 * - 像 triangle 这种是有重复走的情况，子问题有交集，所以用动态规划来解决更好
 * - 通常应用动态规划的问题，都是用递归的思路自上而下思考，然后自下而上用循环的方法实现，避免递归中的重复计算，提高性能
 *
 * 使用场景要满足两个条件：
 * - 条件一：求最大/最小值；求可行/不可行；求可行个数
 * - 条件二：不可排序或交换
 *
 * ----------------------------------------------------------------
 *
 * 四个要素：
 * - 状态 state：存储小规模问题的结果
 * - 方程 function：状态之间的联系，怎么通过小的状态，来算大的状态
 * - 初始化 initialization：最极限的小状态是什么, 起点
 * - 答案 Answer：最大的那个状态是什么，终点
 *
 * 常见的DP问题有四类：
 * - Matrix DP (10%)
 * - Sequence (40%)
 * - Two Sequences DP (40%)
 * - Backpack (10%)
 *
 * ----------------------------------------------------------------
 *
 * 注意：贪心算法大多题目靠背答案，所以如果能用动态规划就尽量用动规，不用贪心算法
 *
 */