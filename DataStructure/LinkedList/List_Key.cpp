//
// Created by linjliang on 2020/7/26.
//

/*
 * 链表相关的核心点:
 *
 * - null 异常处理
 * - dummy node 哑巴节点
 * - 翻转链表
 * - 合并两个链表
 * - 快慢指针
 * - 插入节点到排序链表
 * - 移除节点
 * - 找到链表的中间节点
 * - 链表重排需要考虑终结点，增加nullptr来终止
 */

/*
 * 快慢指针的应用：
 * - 找到无环链表的中间节点
 * - 判断链表是否有环：快慢指针相遇
 * - 计算链表的环长度：快慢指针第二次相遇和第一次相遇之间所用的步数
 * - 找到入环的节点：头节点为p，快慢指针第一次相遇点的下一节点为q，p、q同时单步前进，相遇点即为入环点
 *   （注意：找入环点的方法中，q为相遇点的下一节点是因为我喜欢的实现是初始状态快指针比慢指针领先一步，如果快慢同地出发，则
 *   （q为为相遇点，不需要是相遇点的下一节点
 */